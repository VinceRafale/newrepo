cordova.define("cordova-plugin-contacts.contacts",function(t,c,o){var n=t("cordova/argscheck"),e=t("cordova/exec"),a=t("./ContactError"),r=t("./Contact"),i=t("./ContactFieldType"),f=t("./convertUtils"),s={fieldType:i,find:function(t,c,o,r){if(n.checkArgs("afFO","contacts.find",arguments),t.length){r=r||{filter:"",multiple:!0};var i=function(t){for(var o=[],n=0,e=t.length;e>n;n++)o.push(f.toCordovaFormat(s.create(t[n])));c(o)};e(i,o,"Contacts","search",[t,r])}else o&&o(new a(a.INVALID_ARGUMENT_ERROR))},pickContact:function(t,c){n.checkArgs("fF","contacts.pick",arguments);var o=function(c){var o=c instanceof r?c:s.create(c);t(f.toCordovaFormat(o))};e(o,c,"Contacts","pickContact",[])},create:function(t){n.checkArgs("O","contacts.create",arguments);var c=new r;for(var o in t)"undefined"!=typeof c[o]&&t.hasOwnProperty(o)&&(c[o]=t[o]);return c}};o.exports=s});