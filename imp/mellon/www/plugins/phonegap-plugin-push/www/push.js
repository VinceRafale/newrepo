cordova.define("phonegap-plugin-push.PushNotification",function(i,t,o){var n=cordova.require("cordova/exec"),e=function(i){if(this._handlers={registration:[],notification:[],error:[]},"undefined"==typeof i)throw new Error("The options argument is required.");this.options=i;var t=this,o=function(i){if(i&&"undefined"!=typeof i.registrationId)t.emit("registration",i);else if(i&&i.additionalData&&"undefined"!=typeof i.additionalData.callback){var o=function(i,t){for(var o=Array.prototype.slice.call(arguments,2),n=i.split("."),e=n.pop(),r=0;r<n.length;r++)t=t[n[r]];return t[e].apply(t,o)};o(i.additionalData.callback,window,i)}else i&&t.emit("notification",i)},e=function(i){var o="string"==typeof i?new Error(i):i;t.emit("error",o)};setTimeout(function(){n(o,e,"PushNotification","init",[i])},10)};e.prototype.unregister=function(i,t,o){if(t||(t=function(){}),"function"!=typeof t)return void console.log("PushNotification.unregister failure: failure parameter not a function");if("function"!=typeof i)return void console.log("PushNotification.unregister failure: success callback parameter must be a function");var e=this,r=function(){e._handlers={registration:[],notification:[],error:[]},i()};n(r,t,"PushNotification","unregister",[o])},e.prototype.setApplicationIconBadgeNumber=function(i,t,o){return t||(t=function(){}),"function"!=typeof t?void console.log("PushNotification.setApplicationIconBadgeNumber failure: failure parameter not a function"):"function"!=typeof i?void console.log("PushNotification.setApplicationIconBadgeNumber failure: success callback parameter must be a function"):void n(i,t,"PushNotification","setApplicationIconBadgeNumber",[{badge:o}])},e.prototype.getApplicationIconBadgeNumber=function(i,t){return t||(t=function(){}),"function"!=typeof t?void console.log("PushNotification.getApplicationIconBadgeNumber failure: failure parameter not a function"):"function"!=typeof i?void console.log("PushNotification.getApplicationIconBadgeNumber failure: success callback parameter must be a function"):void n(i,t,"PushNotification","getApplicationIconBadgeNumber",[])},e.prototype.on=function(i,t){this._handlers.hasOwnProperty(i)&&this._handlers[i].push(t)},e.prototype.off=function(i,t){if(this._handlers.hasOwnProperty(i)){var o=this._handlers[i].indexOf(t);o>=0&&this._handlers[i].splice(o,1)}},e.prototype.emit=function(){var i=Array.prototype.slice.call(arguments),t=i.shift();if(!this._handlers.hasOwnProperty(t))return!1;for(var o=0,n=this._handlers[t].length;n>o;o++)this._handlers[t][o].apply(void 0,i);return!0},e.prototype.finish=function(i,t){return i||(i=function(){}),t||(t=function(){}),"function"!=typeof i?void console.log("finish failure: success callback parameter must be a function"):"function"!=typeof t?void console.log("finish failure: failure parameter not a function"):void n(i,t,"PushNotification","finish",[])},o.exports={init:function(i){return new e(i)},PushNotification:e}});