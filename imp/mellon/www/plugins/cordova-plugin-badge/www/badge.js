cordova.define("cordova-plugin-badge.Badge",function(e,n,i){var t=e("cordova/exec"),c=e("cordova/channel");n.clear=function(e,n){this.exec("clearBadge",null,e,n)},n.set=function(e,n,i){var t=[parseInt(e)||0];this.registerPermission(function(e){e&&this.exec("setBadge",t,n,i)},this)},n.get=function(e,n){this.exec("getBadge",null,e,n)},n.increase=function(e,n,i){this.get(function(t){this.set(t+(e||1),n,i)},this)},n.decrease=function(e,n,i){this.get(function(t){this.set(Math.max(0,t-(e||1)),n,i)},this)},n.hasPermission=function(e,n){this.exec("hasPermission",null,e,n)},n.registerPermission=function(e,n){this.exec("registerPermission",null,e,n)},n.configure=function(e){for(var n in e)this._config.hasOwnProperty(n)&&(this._config[n]=e[n]);return this._config},n._config={autoClear:!1},n.createCallbackFn=function(e,n){return"function"==typeof e?function(){e.apply(n||this,arguments)}:void 0},n.exec=function(e,n,i,c){var o=this.createCallbackFn(i,c),s=[];Array.isArray(n)?s=n:n&&s.push(n),t(o,null,"Badge",e,s)},c.onCordovaReady.subscribe(function(){n._config.autoClear&&n.clear()}),c.onResume.subscribe(function(){n._config.autoClear&&n.clear()})});